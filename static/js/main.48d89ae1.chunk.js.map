{"version":3,"sources":["Redux/user/authSlice.js","Redux/user/userSlice.js","Redux/contact/contactSlice.js","Redux/store.js","Components/Navigation/PrivateRoute.js","Components/Navigation/PublicRoute.js","Components/Navigation/Navigation.js","Components/HomePage/HomePage.js","App.js","index.js"],"names":["slice","createSlice","name","initialState","user","email","token","isLoggedIn","reducers","setCredentials","state","payload","removeCredetials","setCurrentUser","extraReducers","builder","actions","getIsLoggedIn","auth","getUserName","getUserToken","userApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","getState","set","tagTypes","endpoints","fetchCurrentUser","query","providesTags","createUser","mutation","url","method","body","password","invalidatesTags","loginUser","logoutUser","useFetchCurrentUserQuery","useCreateUserMutation","useLoginUserMutation","useLogoutUserMutation","contactApi","fetchContacts","deleteContact","contactId","createContact","number","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","userPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","setupListeners","dispatch","PrivateRoute","children","routeProps","useSelector","to","PublicRoute","component","restricted","redirectTo","shouldRedirect","Navigation","useDispatch","isLoading","data","skipToken","isAdmin","useEffect","handleSubmit","a","result","console","log","className","Container","Navbar","expand","bg","variant","Brand","as","NavLink","Collapse","id","Nav","Link","Text","href","Button","type","onClick","disabled","color","height","width","Homepage","ContactForm","lazy","ContactsList","AdminPage","Register","Login","App","fallback","path","exact","HomePage","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.48d89ae1.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    setCredentials: (state, { payload: { user, token } }) => {\r\n      state.user = user;\r\n      state.token = token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    removeCredetials: state => {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n    setCurrentUser: (state, { payload }) => {\r\n      state.user = { ...payload };\r\n      state.isLoggedIn = true;\r\n    },\r\n  },\r\n  extraReducers: builder => {},\r\n});\r\n\r\nexport default slice.reducer;\r\n\r\nexport const { setCredentials, removeCredetials, setCurrentUser } =\r\n  slice.actions;\r\n\r\nexport const getIsLoggedIn = state => state.auth.isLoggedIn;\r\nexport const getUserName = state => state.auth.user.name;\r\nexport const getUserToken = state => state.auth.token;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const userApi = createApi({\r\n  reducerPath: 'userApi',\r\n\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token;\r\n\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`);\r\n      }\r\n\r\n      return headers;\r\n    },\r\n  }),\r\n\r\n  tagTypes: ['User'],\r\n  endpoints: builder => ({\r\n    fetchCurrentUser: builder.query({\r\n      query: () => `/users/current`,\r\n      providesTags: ['User'],\r\n    }),\r\n    createUser: builder.mutation({\r\n      query: ({ name, email, password }) => ({\r\n        url: '/users/signup',\r\n        method: 'POST',\r\n        body: {\r\n          name: name,\r\n          email: email,\r\n          password: password,\r\n        },\r\n      }),\r\n      invalidatesTags: ['User'],\r\n    }),\r\n    loginUser: builder.mutation({\r\n      query: ({ email, password }) => ({\r\n        url: '/users/login',\r\n        method: 'POST',\r\n        body: {\r\n          email: email,\r\n          password: password,\r\n        },\r\n      }),\r\n      invalidatesTags: ['User'],\r\n    }),\r\n    logoutUser: builder.mutation({\r\n      query: () => ({\r\n        url: '/users/logout',\r\n        method: 'POST',\r\n      }),\r\n      invalidatesTags: ['User'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useFetchCurrentUserQuery,\r\n  useCreateUserMutation,\r\n  useLoginUserMutation,\r\n  useLogoutUserMutation,\r\n} = userApi;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactApi = createApi({\n  reducerPath: 'contactApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://connections-api.herokuapp.com',\n    prepareHeaders: (headers, { getState }) => {\n      const token = getState().auth.token;\n\n      if (token) {\n        headers.set('authorization', `Bearer ${token}`);\n      }\n\n      return headers;\n    },\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: ({ name, number }) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: {\n          name: name,\n          number: number,\n        },\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactApi;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport { contactApi } from './contact/contactSlice';\nimport { userApi } from './user/userSlice';\nimport auth from './user/authSlice';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst userPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(userPersistConfig, auth),\n    [contactApi.reducerPath]: contactApi.reducer,\n    [userApi.reducerPath]: userApi.reducer,\n  },\n  middleware: getDefaultMiddleware => [\n    ...getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n    contactApi.middleware,\n    userApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n\nsetupListeners(store.dispatch);\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../../Redux/user/authSlice';\r\n\r\nconst PrivateRoute = ({ children, ...routeProps }) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to=\"/login\" />}\r\n    </Route>\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import { useSelector } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { getIsLoggedIn } from '../../Redux/user/authSlice';\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  restricted = false,\r\n  redirectTo = '/',\r\n  children,\r\n  ...routeProps\r\n}) => {\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return (\r\n    <Route {...routeProps}>\r\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { skipToken } from '@reduxjs/toolkit/query/react';\r\nimport {\r\n  getIsLoggedIn,\r\n  getUserName,\r\n  getUserToken,\r\n  setCurrentUser,\r\n  removeCredetials,\r\n} from '../../Redux/user/authSlice';\r\nimport {\r\n  useFetchCurrentUserQuery,\r\n  useLogoutUserMutation,\r\n} from '../../Redux/user/userSlice';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Container, Nav, Button } from 'react-bootstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './Navigation.scss';\r\n\r\nconst Navigation = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const isLoggedIn = useSelector(getIsLoggedIn);\r\n  const token = useSelector(getUserToken);\r\n  const name = useSelector(getUserName);\r\n\r\n  const [logoutUser, { isLoading }] = useLogoutUserMutation();\r\n  const { data } = useFetchCurrentUserQuery(token ?? skipToken);\r\n\r\n  const isAdmin = name === 'admin';\r\n\r\n  useEffect(() => {\r\n    if (token === null) {\r\n      return;\r\n    }\r\n\r\n    dispatch(setCurrentUser(data));\r\n  }, [dispatch, data, token]);\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const result = await logoutUser();\r\n      dispatch(removeCredetials(result.data));\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Container>\r\n        <Navbar expand=\"lg\" bg=\"nav\" variant=\"dark\">\r\n          <Navbar.Brand as={NavLink} to=\"/\">\r\n            Phonebook\r\n          </Navbar.Brand>\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            {isLoggedIn && (\r\n              <Nav className=\"me-auto\">\r\n                <Nav.Link as={NavLink} to=\"/contacts\">\r\n                  Contacts\r\n                </Nav.Link>\r\n                {isAdmin && (\r\n                  <Nav.Link as={NavLink} to=\"/admin\">\r\n                    Admin\r\n                  </Nav.Link>\r\n                )}\r\n              </Nav>\r\n            )}\r\n            {isLoggedIn ? (\r\n              <Nav>\r\n                <Navbar.Text className=\"nav-title\">\r\n                  Signed in as: <a href=\"/login\">{name}</a>\r\n                </Navbar.Text>\r\n                <Button\r\n                  type=\"button\"\r\n                  variant=\"light\"\r\n                  onClick={handleSubmit}\r\n                  disabled={isLoading}\r\n                >\r\n                  {isLoading ? (\r\n                    <Loader\r\n                      type=\"Circles\"\r\n                      color=\"#00BFFF\"\r\n                      height={15}\r\n                      width={15}\r\n                    />\r\n                  ) : (\r\n                    'Exit'\r\n                  )}\r\n                </Button>\r\n              </Nav>\r\n            ) : (\r\n              <Nav>\r\n                <Nav.Link as={NavLink} to=\"/login\">\r\n                  Log in\r\n                </Nav.Link>\r\n                <Nav.Link as={NavLink} to=\"/register\">\r\n                  Log up\r\n                </Nav.Link>\r\n              </Nav>\r\n            )}\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from 'react';\r\n\r\nimport { Container } from 'react-bootstrap';\r\n\r\nconst Homepage = () => {\r\n  return (\r\n    <Container>\r\n      <p className=\"home-text\">This is a home page</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { lazy, Suspense } from 'react';\nimport { Switch } from 'react-router-dom';\n\nimport PrivateRoute from './Components/Navigation/PrivateRoute';\nimport PublicRoute from './Components/Navigation/PublicRoute';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport Navigation from './Components/Navigation';\nimport HomePage from './Components/HomePage';\nconst ContactForm = lazy(() =>\n  import('./Components/Form' /* webpackChunkName: \"ContactForm\"*/),\n);\nconst ContactsList = lazy(() =>\n  import('./Components/ContactsList' /* webpackChunkName: \"ContactsList\"*/),\n);\nconst AdminPage = lazy(() =>\n  import('./Components/AdminPage' /* webpackChunkName: \"AdminPage\"*/),\n);\nconst Register = lazy(() =>\n  import('./Components/Register' /* webpackChunkName: \"Register\"*/),\n);\nconst Login = lazy(() =>\n  import('./Components/Login' /* webpackChunkName: \"Login\"*/),\n);\n\nconst App = () => {\n  return (\n    <>\n      <Navigation />\n\n      <Suspense\n        fallback={\n          <Loader type=\"Circles\" color=\"#383838\" height={100} width={100} />\n        }\n      >\n        <Switch>\n          <PublicRoute path=\"/\" exact>\n            <HomePage />\n          </PublicRoute>\n\n          <PrivateRoute path=\"/contacts\">\n            <ContactForm />\n            <ContactsList />\n          </PrivateRoute>\n\n          <PrivateRoute path=\"/admin\">\n            <AdminPage />\n          </PrivateRoute>\n\n          <PublicRoute path=\"/login\" redirectTo=\"/contacts\" restricted>\n            <Login />\n          </PublicRoute>\n\n          <PublicRoute path=\"/register\" restricted>\n            <Register />\n          </PublicRoute>\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './Redux/store';\nimport App from './App';\n\nimport './index.scss';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}