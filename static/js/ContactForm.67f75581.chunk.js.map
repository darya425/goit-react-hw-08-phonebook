{"version":3,"sources":["Components/Form/Form.js"],"names":["ContactForm","useState","name","setName","number","setNumber","useCreateContactMutation","createContact","isLoading","contacts","useFetchContactsQuery","data","handleInputName","e","target","value","reset","Container","className","Form","autoComplete","onSubmit","preventDefault","newContact","toLowerCase","find","contact","alert","toast","success","autoClose","Group","controlId","Label","Control","type","placeholder","pattern","title","onChange","required","Button","variant","disabled","color","height","width"],"mappings":"mUAmHeA,EAnGK,WAClB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAEA,EAAuCC,cAAvC,mBAAOC,EAAP,KAAwBC,EAAxB,KAAwBA,UACVC,EAAaC,cAAnBC,KAEFC,EAAkB,SAAAC,GACtB,MAAwBA,EAAEC,OAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MAEd,OAAQb,GACN,IAAK,OACHC,EAAQY,GACR,MAEF,IAAK,SACHV,EAAUU,GACV,MAEF,QACE,SAuBAC,EAAQ,WACZb,EAAQ,IACRE,EAAU,KAGZ,OACE,qCACE,cAAC,IAAD,IACA,eAACY,EAAA,EAAD,WACE,oBAAIC,UAAU,QAAd,6BACA,eAACC,EAAA,EAAD,CACED,UAAU,eACVE,aAAa,MACbC,SAhCa,SAAAR,GACnBA,EAAES,iBACF,IAAMC,EAAarB,EAAKsB,cAKxB,GAJsBf,EAASgB,MAC7B,SAAAC,GAAO,OAAIA,EAAQxB,KAAKsB,gBAAkBD,KAM1C,OAFAI,MAAMzB,EAAO,iCACbc,IAIFT,EAAc,CAAEL,OAAME,WACtBwB,IAAMC,QAAQ,iBAAkB,CAAEC,UAAW,MAE7Cd,KAaI,UAKE,eAACG,EAAA,EAAKY,MAAN,CAAYb,UAAU,OAAOc,UAAU,gBAAvC,UACE,cAACb,EAAA,EAAKc,MAAN,mBACA,cAACd,EAAA,EAAKe,QAAN,CACEC,KAAK,OACLjC,KAAK,OACLa,MAAOb,EACPkC,YAAY,aACZC,QAAQ,yHACRC,MAAM,mCACNC,SAAU3B,EACV4B,UAAQ,OAIZ,eAACrB,EAAA,EAAKY,MAAN,CAAYb,UAAU,OAAOc,UAAU,kBAAvC,UACE,cAACb,EAAA,EAAKc,MAAN,qBACA,cAACd,EAAA,EAAKe,QAAN,CACEC,KAAK,MACLjC,KAAK,SACLa,MAAOX,EACPgC,YAAY,+BACZC,QAAQ,6BACRC,MAAM,8BACNC,SAAU3B,EACV4B,UAAQ,OAIZ,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYP,KAAK,SAASQ,SAAUnC,EAApD,SACGA,EACC,cAAC,IAAD,CAAQ2B,KAAK,UAAUS,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE1D","file":"static/js/ContactForm.67f75581.chunk.js","sourcesContent":["import { useState } from 'react';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from '../../Redux/contact/contactSlice';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport { Container, Form, Button } from 'react-bootstrap';\n\nimport './Form.scss';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const [createContact, { isLoading }] = useCreateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const handleInputName = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newContact = name.toLowerCase();\n    const savedContacts = contacts.find(\n      contact => contact.name.toLowerCase() === newContact,\n    );\n\n    if (savedContacts) {\n      alert(name + ' is already in contacts.');\n      reset();\n      return;\n    }\n\n    createContact({ name, number });\n    toast.success('Contact added!', { autoClose: 2000 });\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <Container>\n        <h1 className=\"title\">Add new contact</h1>\n        <Form\n          className=\"form-contact\"\n          autoComplete=\"off\"\n          onSubmit={handleSubmit}\n        >\n          <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Enter name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"You need to click on the letters\"\n              onChange={handleInputName}\n              required\n            />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicNumber\">\n            <Form.Label>Number</Form.Label>\n            <Form.Control\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Enter number 666-666-6666...\"\n              pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n              title=\"Do you know what a dash is?\"\n              onChange={handleInputName}\n              required\n            />\n          </Form.Group>\n\n          <Button variant=\"secondary\" type=\"submit\" disabled={isLoading}>\n            {isLoading ? (\n              <Loader type=\"Circles\" color=\"#383838\" height={15} width={15} />\n            ) : (\n              'Add contact'\n            )}\n          </Button>\n        </Form>\n      </Container>\n    </>\n  );\n};\n\nexport default ContactForm;\n"],"sourceRoot":""}