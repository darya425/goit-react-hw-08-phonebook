{"version":3,"sources":["Components/Filter/Filter.js","Components/Contact/Contact.js","Components/ContactsList/ContactsList.js"],"names":["Filter","filter","Form","className","Label","FormControl","type","placeholder","onChange","e","currentTarget","value","Contact","id","name","number","useDeleteContactMutation","deleteContact","isDeleting","isLoading","onClick","toast","success","autoClose","disabled","color","height","width","ContactsList","useState","contacts","setContacts","useFetchContactsQuery","data","isFetching","useEffect","Container","normalizeFilter","toLowerCase","filterValue","includes","map","contact"],"mappings":"qUAyBeA,EAnBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKhB,OACE,eAACC,EAAA,EAAD,CAAMC,UAAU,qBAAhB,UACE,cAACD,EAAA,EAAKE,MAAN,CAAYD,UAAU,eAAtB,oCACA,cAACE,EAAA,EAAD,CACEC,KAAK,SACLC,YAAY,oBACZJ,UAAU,oBACV,aAAW,SACXK,SAZe,SAAAC,GACnBR,EAAOQ,EAAEC,cAAcC,c,kCCkCZC,G,aA9BC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAC3B,EAAmDC,cAAnD,mBAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UAExB,OACE,qBAAIhB,UAAU,OAAd,UACE,sBAAMA,UAAU,YAAhB,SAA6BW,IAC7B,sBAAMX,UAAU,YAAhB,SAA6BY,IAC7B,wBACEZ,UAAU,cACVG,KAAK,SACLc,QAAS,WACPH,EAAcJ,GACdQ,IAAMC,QAAQ,mBAAoB,CAAEC,UAAW,OAEjDC,SAAUN,EAPZ,SASGA,GACC,cAAC,IAAD,CAAQZ,KAAK,UAAUmB,MAAM,UAAUC,OAAQ,GAAIC,MAAO,Y,QCwBrDC,G,OAzCM,WACnB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA6BC,cAArBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAEdC,qBAAU,WACJF,GACFF,EAAYE,KAEb,CAACA,IAeJ,OACE,eAACG,EAAA,EAAD,WACE,oBAAIjC,UAAU,UAAd,sBACA,cAAC,EAAD,CAAQF,OAhBa,SAAAA,GACvB,GAAIA,EAAQ,CACV,IAAMoC,EAAkBpC,EAAOqC,cACzBC,EAAcT,EAAS7B,QAAO,qBAAGa,KAChCwB,cAAcE,SAASH,MAG9BN,EAAYQ,QAEZR,EAAYE,MAQXC,GACC,cAAC,IAAD,CAAQ5B,KAAK,UAAUmB,MAAM,UAAUC,OAAQ,IAAKC,MAAO,MAE5DG,GACC,oBAAI3B,UAAU,OAAd,SACG2B,EAASW,KAAI,SAAAC,GAAO,OACnB,cAAC,EAAD,eAA8BA,GAAhBA,EAAQ7B","file":"static/js/ContactsList.0bba0333.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nimport './Filter.scss';\n\nconst Filter = ({ filter }) => {\n  const handleSubmit = e => {\n    filter(e.currentTarget.value);\n  };\n\n  return (\n    <Form className=\"d-flex filter-form\">\n      <Form.Label className=\"filter-title\">Find contact by name :</Form.Label>\n      <FormControl\n        type=\"search\"\n        placeholder=\"Find a contact...\"\n        className=\"mr-2 filter-input\"\n        aria-label=\"Search\"\n        onChange={handleSubmit}\n      />\n    </Form>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from '../../Redux/contact/contactSlice';\n\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport './Contact.scss';\n\nconst Contact = ({ id, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  return (\n    <li className=\"item\">\n      <span className=\"name-item\">{name}</span>\n      <span className=\"name-item\">{number}</span>\n      <button\n        className=\"btn-contact\"\n        type=\"button\"\n        onClick={() => {\n          deleteContact(id);\n          toast.success('Contact deleted!', { autoClose: 2000 });\n        }}\n        disabled={isDeleting}\n      >\n        {isDeleting && (\n          <Loader type=\"Circles\" color=\"#C8C8C8\" height={15} width={15} />\n        )}\n      </button>\n    </li>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import { useState, useEffect } from 'react';\nimport { useFetchContactsQuery } from '../../Redux/contact/contactSlice';\nimport Filter from '../Filter';\nimport Contact from '../Contact';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nimport { Container } from 'react-bootstrap';\n\nimport './ContactsList.scss';\n\nconst ContactsList = () => {\n  const [contacts, setContacts] = useState([]);\n  const { data, isFetching } = useFetchContactsQuery();\n\n  useEffect(() => {\n    if (data) {\n      setContacts(data);\n    }\n  }, [data]);\n\n  const onFilterContacts = filter => {\n    if (filter) {\n      const normalizeFilter = filter.toLowerCase();\n      const filterValue = contacts.filter(({ name }) =>\n        name.toLowerCase().includes(normalizeFilter),\n      );\n\n      setContacts(filterValue);\n    } else {\n      setContacts(data);\n    }\n  };\n\n  return (\n    <Container>\n      <h2 className=\"contact\">Contacts</h2>\n      <Filter filter={onFilterContacts} />\n      {isFetching && (\n        <Loader type=\"Circles\" color=\"#383838\" height={100} width={100} />\n      )}\n      {contacts && (\n        <ul className=\"list\">\n          {contacts.map(contact => (\n            <Contact key={contact.id} {...contact} />\n          ))}\n        </ul>\n      )}\n    </Container>\n  );\n};\n\nexport default ContactsList;\n"],"sourceRoot":""}