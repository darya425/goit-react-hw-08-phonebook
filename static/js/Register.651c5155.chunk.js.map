{"version":3,"sources":["Components/Register/Register.js"],"names":["Register","useState","name","setName","email","setEmail","password","setPassword","useCreateUserMutation","createUser","isLoading","handleInputName","e","target","value","reset","Container","className","Form","onSubmit","preventDefault","unwrap","then","payload","console","log","toast","success","autoClose","catch","error","Group","controlId","Label","Control","type","placeholder","onChange","Text","Button","variant","disabled","color","height","width"],"mappings":"mUAsHeA,EAxGE,WACf,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEA,EAAoCC,cAApC,mBAAOC,EAAP,KAAqBC,EAArB,KAAqBA,UAEfC,EAAkB,SAAAC,GACtB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MAEd,OAAQZ,GACN,IAAK,OACHC,EAAQW,GACR,MAEF,IAAK,QACHT,EAASS,GACT,MAEF,IAAK,WACHP,EAAYO,GACZ,MAEF,QACE,SAqBAC,EAAQ,WACZZ,EAAQ,IACRE,EAAS,IACTE,EAAY,KAGd,OACE,eAACS,EAAA,EAAD,WACE,cAAC,IAAD,IACA,oBAAIC,UAAU,iBAAd,+BACA,eAACC,EAAA,EAAD,CAAMC,SA3BW,SAAAP,GACnBA,EAAEQ,iBAEFX,EAAW,CAAEP,OAAME,QAAOE,aACvBe,SACAC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZG,IAAMC,QAAQ,uBAAwB,CAAEC,UAAW,SAEpDC,OAAM,SAAAC,GACLN,QAAQC,IAAIK,GACZJ,IAAMI,MAAM,YAAa,CAAEF,UAAW,SAG1Cb,KAaE,UACE,eAACG,EAAA,EAAKa,MAAN,CAAYd,UAAU,OAAOe,UAAU,gBAAvC,UACE,cAACd,EAAA,EAAKe,MAAN,2BACA,cAACf,EAAA,EAAKgB,QAAN,CACEC,KAAK,OACLjC,KAAK,OACLY,MAAOZ,EACPkC,YAAY,eACZC,SAAU1B,OAId,eAACO,EAAA,EAAKa,MAAN,CAAYd,UAAU,OAAOe,UAAU,iBAAvC,UACE,cAACd,EAAA,EAAKe,MAAN,4BACA,cAACf,EAAA,EAAKgB,QAAN,CACEC,KAAK,QACLjC,KAAK,QACLY,MAAOV,EACPgC,YAAY,cACZC,SAAU1B,IAEZ,cAACO,EAAA,EAAKoB,KAAN,CAAWrB,UAAU,aAArB,+DAKF,eAACC,EAAA,EAAKa,MAAN,CAAYd,UAAU,OAAOe,UAAU,oBAAvC,UACE,cAACd,EAAA,EAAKe,MAAN,uBACA,cAACf,EAAA,EAAKgB,QAAN,CACEC,KAAK,WACLjC,KAAK,WACLY,MAAOR,EACP8B,YAAY,WACZC,SAAU1B,OAId,cAAC4B,EAAA,EAAD,CAAQC,QAAQ,YAAYL,KAAK,SAASM,SAAU/B,EAApD,SACGA,EACC,cAAC,IAAD,CAAQyB,KAAK,UAAUO,MAAM,UAAUC,OAAQ,GAAIC,MAAO,KAE1D","file":"static/js/Register.651c5155.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nimport { useCreateUserMutation } from '../../Redux/user/userSlice';\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\n\r\nimport { Container, Form, Button } from 'react-bootstrap';\r\n\r\nimport './Register.scss';\r\n\r\nconst Register = () => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const [createUser, { isLoading }] = useCreateUserMutation();\r\n\r\n  const handleInputName = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'email':\r\n        setEmail(value);\r\n        break;\r\n\r\n      case 'password':\r\n        setPassword(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    createUser({ name, email, password })\r\n      .unwrap()\r\n      .then(payload => {\r\n        console.log(payload);\r\n        toast.success('You have registered!', { autoClose: 2000 });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n        toast.error('Fuck YOU!', { autoClose: 2000 });\r\n      });\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <ToastContainer />\r\n      <h2 className=\"register-title\">Registration form</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n          <Form.Label>Name Surname</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Name Surname\"\r\n            onChange={handleInputName}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            placeholder=\"Enter email\"\r\n            onChange={handleInputName}\r\n          />\r\n          <Form.Text className=\"text-muted\">\r\n            We'll never share your email with anyone else.\r\n          </Form.Text>\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            placeholder=\"Password\"\r\n            onChange={handleInputName}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button variant=\"secondary\" type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? (\r\n            <Loader type=\"Circles\" color=\"#00BFFF\" height={15} width={15} />\r\n          ) : (\r\n            'Submit'\r\n          )}\r\n        </Button>\r\n      </Form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"sourceRoot":""}